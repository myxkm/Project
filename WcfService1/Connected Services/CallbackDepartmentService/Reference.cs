//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService1.CallbackDepartmentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/WCF.Model")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CallbackDepartmentService.IDepartmentService", CallbackContract=typeof(WcfService1.CallbackDepartmentService.IDepartmentServiceCallback))]
    public interface IDepartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetAllList", ReplyAction="http://tempuri.org/IDepartmentService/GetAllListResponse")]
        System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department> GetAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetAllList", ReplyAction="http://tempuri.org/IDepartmentService/GetAllListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department>> GetAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetList", ReplyAction="http://tempuri.org/IDepartmentService/GetListResponse")]
        System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department> GetList(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetList", ReplyAction="http://tempuri.org/IDepartmentService/GetListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department>> GetListAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/Add", ReplyAction="http://tempuri.org/IDepartmentService/AddResponse")]
        WcfService1.CallbackDepartmentService.Department Add(WcfService1.CallbackDepartmentService.Department model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/Add", ReplyAction="http://tempuri.org/IDepartmentService/AddResponse")]
        System.Threading.Tasks.Task<WcfService1.CallbackDepartmentService.Department> AddAsync(WcfService1.CallbackDepartmentService.Department model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/Delete", ReplyAction="http://tempuri.org/IDepartmentService/DeleteResponse")]
        bool Delete(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/Delete", ReplyAction="http://tempuri.org/IDepartmentService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(long Id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDepartmentService/Plus")]
        void Plus(long m, long n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDepartmentService/Plus")]
        System.Threading.Tasks.Task PlusAsync(long m, long n);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDepartmentService/Result")]
        void Result(long m, long n, long r);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentServiceChannel : WcfService1.CallbackDepartmentService.IDepartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentServiceClient : System.ServiceModel.DuplexClientBase<WcfService1.CallbackDepartmentService.IDepartmentService>, WcfService1.CallbackDepartmentService.IDepartmentService {
        
        public DepartmentServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department> GetAllList() {
            return base.Channel.GetAllList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department>> GetAllListAsync() {
            return base.Channel.GetAllListAsync();
        }
        
        public System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department> GetList(string Name) {
            return base.Channel.GetList(Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService1.CallbackDepartmentService.Department>> GetListAsync(string Name) {
            return base.Channel.GetListAsync(Name);
        }
        
        public WcfService1.CallbackDepartmentService.Department Add(WcfService1.CallbackDepartmentService.Department model) {
            return base.Channel.Add(model);
        }
        
        public System.Threading.Tasks.Task<WcfService1.CallbackDepartmentService.Department> AddAsync(WcfService1.CallbackDepartmentService.Department model) {
            return base.Channel.AddAsync(model);
        }
        
        public bool Delete(long Id) {
            return base.Channel.Delete(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(long Id) {
            return base.Channel.DeleteAsync(Id);
        }
        
        public void Plus(long m, long n) {
            base.Channel.Plus(m, n);
        }
        
        public System.Threading.Tasks.Task PlusAsync(long m, long n) {
            return base.Channel.PlusAsync(m, n);
        }
    }
}
